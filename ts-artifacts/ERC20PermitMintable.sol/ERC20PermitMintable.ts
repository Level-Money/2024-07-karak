export const ERC20PermitMintable = {
  "abi": [
    {
      "type": "constructor",
      "inputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "DOMAIN_SEPARATOR",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "allowance",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "spender",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "approve",
      "inputs": [
        {
          "name": "spender",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "balanceOf",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "burn",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "decimals",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "eip712Domain",
      "inputs": [],
      "outputs": [
        {
          "name": "fields",
          "type": "bytes1",
          "internalType": "bytes1"
        },
        {
          "name": "name",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "version",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "chainId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "verifyingContract",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "salt",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "extensions",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "name_",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "symbol_",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "decimals_",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "mint",
      "inputs": [
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "name",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "nonces",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "permit",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "spender",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "deadline",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "v",
          "type": "uint8",
          "internalType": "uint8"
        },
        {
          "name": "r",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "s",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "symbol",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalSupply",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transfer",
      "inputs": [
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferFrom",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "Approval",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "spender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "EIP712DomainChanged",
      "inputs": [],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Transfer",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AddressZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ECDSAInvalidSignature",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ECDSAInvalidSignatureLength",
      "inputs": [
        {
          "name": "length",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "ECDSAInvalidSignatureS",
      "inputs": [
        {
          "name": "s",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "ERC20InsufficientAllowance",
      "inputs": [
        {
          "name": "spender",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "allowance",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "needed",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "ERC20InsufficientBalance",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "balance",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "needed",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "ERC20InvalidApprover",
      "inputs": [
        {
          "name": "approver",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ERC20InvalidReceiver",
      "inputs": [
        {
          "name": "receiver",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ERC20InvalidSender",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ERC20InvalidSpender",
      "inputs": [
        {
          "name": "spender",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ERC2612ExpiredSignature",
      "inputs": [
        {
          "name": "deadline",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "ERC2612InvalidSigner",
      "inputs": [
        {
          "name": "signer",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidAccountNonce",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "currentNonce",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidShortString",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StringTooLong",
      "inputs": [
        {
          "name": "str",
          "type": "string",
          "internalType": "string"
        }
      ]
    }
  ],
  "bytecode": {
    "object": "0x6101606040818152346103cf57610015826103d4565b60049182815260209182820190631d195cdd60e21b9384835281519461003a866103d4565b8686528186015281519161004d836103d4565b6003808452621d1cdd60ea1b83850152815193610069856103d4565b60019081865284860192603160f81b845289519960018060401b039a8b81116102f2578254918583811c931680156103c5575b898410146102d3578190601f93848111610374575b50899084831160011461031257600092610307575b505060001982851b1c191690851b1782555b8251928b84116102f2578c548581811c911680156102e8575b898210146102d35782811161028d575b50879184116001146102275793839491849260009561021c575b50501b92600019911b1c19161788555b61013486610405565b94610120958652610144856105cb565b96610140978852519020938460e05251902096610100978089524660a0528251938401947f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f86528385015260608401524660808401523060a084015260a0835260c08301968388109088111761020757508590525190206080523060c0526117da9384610770853960805184611263015260a0518461132f015260c05184611234015260e051846112b2015251836112d80152518261057c015251816105a60152f35b604190634e487b7160e01b6000525260246000fd5b01519350388061011b565b9190601f198416928d60005284896000209460005b8b89838310610276575050501061025c575b50505050811b01885561012b565b01519060f884600019921b161c191690553880808061024e565b86860151895590970196948501948893500161023c565b8d600052886000208380870160051c8201928b88106102ca575b0160051c019086905b8281106102be575050610101565b600081550186906102b0565b925081926102a7565b60228e634e487b7160e01b6000525260246000fd5b90607f16906100f1565b60418d634e487b7160e01b6000525260246000fd5b0151905038806100c6565b90879350601f19831691866000528b6000209260005b8d82821061035e5750508411610346575b505050811b0182556100d8565b015160001983871b60f8161c19169055388080610339565b8385015186558b97909501949384019301610328565b90915084600052896000208480850160051c8201928c86106103bc575b918991869594930160051c01915b8281106103ad5750506100b1565b6000815585945089910161039f565b92508192610391565b92607f169261009c565b600080fd5b604081019081106001600160401b038211176103ef57604052565b634e487b7160e01b600052604160045260246000fd5b8051602091908281101561049f575090601f825111610440578082519201519080831061043157501790565b82600019910360031b1b161790565b90604051809263305a27a960e01b82528060048301528251908160248401526000935b828510610486575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350610463565b6001600160401b0381116103ef576005928354926001938481811c911680156105c1575b838210146105ab57601f8111610577575b5081601f84116001146105115750928293918392600094610506575b50501b916000199060031b1c191617905560ff90565b0151925038806104f0565b919083601f1981168760005284600020946000905b8883831061055d5750505010610544575b505050811b01905560ff90565b015160001960f88460031b161c19169055388080610537565b858701518855909601959485019487935090810190610526565b8560005284601f846000209201871c820191601f8601881c015b82811061059f5750506104d4565b60008155018590610591565b634e487b7160e01b600052602260045260246000fd5b90607f16906104c3565b8051602090818110156106545750601f8251116105f5578082519201519080831061043157501790565b90604051809263305a27a960e01b82528060048301528251908160248401526000935b82851061063b575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350610618565b906001600160401b0382116103ef57600654926001938481811c91168015610765575b838210146105ab57601f811161072e575b5081601f84116001146106c657509282939183926000946106bb575b50501b916000199060031b1c19161760065560ff90565b0151925038806106a4565b919083601f198116600660005284600020946000905b8883831061071457505050106106fb575b505050811b0160065560ff90565b015160001960f88460031b161c191690553880806106ed565b8587015188559096019594850194879350908101906106dc565b600660005284601f84600020920160051c820191601f860160051c015b828110610759575050610688565b6000815501859061074b565b90607f169061067756fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde0314610e2f57508163095ea7b314610e055781631624f6c6146109f257816318160ddd146109d357816323b872dd1461086a578163313ce567146108485781633644e5151461082457816340c10f191461074457816370a08231146107015781637ecebe00146106bd57816384b0196e1461056457816395d89b41146104555781639dc29fac14610339578163a9059cbb14610308578163d505accf1461012d575063dd62ed3e146100d557600080fd5b34610129578060031936011261012957806020926100f1610f3d565b6100f9610f65565b73ffffffffffffffffffffffffffffffffffffffff91821683526001865283832091168252845220549051908152f35b5080fd5b839150346101295760e060031936011261012957610149610f3d565b610151610f65565b906044359260643560843560ff81168103610304578142116102d55773ffffffffffffffffffffffffffffffffffffffff90818516928389526007602052898920908154916001830190558a519060208201927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98452868d840152858a1660608401528a608084015260a083015260c082015260c0815260e0810181811067ffffffffffffffff8211176102a9578b5251902061025e916102559161021461121d565b908c51917f190100000000000000000000000000000000000000000000000000000000000083526002830152602282015260c43591604260a4359220611620565b909291926116bd565b168181036102755786610272878787611355565b80f35b604493508751927f4b800e460000000000000000000000000000000000000000000000000000000084528301526024820152fd5b60248b6041897f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b602483838a51917f62791302000000000000000000000000000000000000000000000000000000008352820152fd5b8680fd5b505034610129578060031936011261012957602090610332610328610f3d565b60243590336110dc565b5160018152f35b83915034610129578260031936011261012957610354610f3d565b73ffffffffffffffffffffffffffffffffffffffff81169160243591831561042d578385528460205285852054918383106103ce5750508184957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef936020938688528785520381872055816002540360025551908152a380f35b610429848489519485947fe450d38c000000000000000000000000000000000000000000000000000000008652850160409194939273ffffffffffffffffffffffffffffffffffffffff606083019616825260208201520152565b0390fd5b5084517f9fabe1c1000000000000000000000000000000000000000000000000000000008152fd5b828434610561578060031936011261056157815191828260095461047881611089565b908184526020956001918760018216918260001461051c5750506001146104c0575b5050506104bc92916104ad910385610fd3565b51928284938452830190610edf565b0390f35b9190869350600983527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af5b82841061050457505050820101816104ad6104bc61049a565b8054848a0186015288955087949093019281016104eb565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168782015293151560051b860190930193508492506104ad91506104bc905061049a565b80fd5b919050346106b957826003193601126106b9576105a07f0000000000000000000000000000000000000000000000000000000000000000611425565b926105ca7f0000000000000000000000000000000000000000000000000000000000000000611560565b90825192602092602085019585871067ffffffffffffffff88111761068d5750926020610643838896610636998b9996528686528151998a997f0f000000000000000000000000000000000000000000000000000000000000008b5260e0868c015260e08b0190610edf565b91898303908a0152610edf565b924660608801523060808801528460a088015286840360c088015251928381520193925b82811061067657505050500390f35b835185528695509381019392810192600101610667565b8360416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8280fd5b505034610129576020600319360112610129578060209273ffffffffffffffffffffffffffffffffffffffff6106f1610f3d565b1681526007845220549051908152f35b505034610129576020600319360112610129578060209273ffffffffffffffffffffffffffffffffffffffff610735610f3d565b16815280845220549051908152f35b919050346106b957806003193601126106b95761075f610f3d565b9073ffffffffffffffffffffffffffffffffffffffff60243592169283156107fd57600254908382018092116107d1575084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260209260025585855284835280852082815401905551908152a380f35b8560116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b90517f9fabe1c1000000000000000000000000000000000000000000000000000000008152fd5b50503461012957816003193601126101295760209061084161121d565b9051908152f35b50503461012957816003193601126101295760209060ff600a54169051908152f35b9050823461056157606060031936011261056157610886610f3d565b61088e610f65565b916044359373ffffffffffffffffffffffffffffffffffffffff8316808352600160205286832033845260205286832054917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83036108f6575b6020886103328989896110dc565b86831061098e57811561095f57331561093057508252600160209081528683203384528152918690209085900390558290610332876108e8565b602490848951917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b602490848951917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b87517ffb8f41b2000000000000000000000000000000000000000000000000000000008152339181019182526020820193909352604081018790528291506060010390fd5b5050346101295781600319360112610129576020906002549051908152f35b83346105615760606003193601126105615767ffffffffffffffff9180358381116106b957610a249036908301611014565b92602435818111610e0157610a3c9036908401611014565b936044359260ff8416809403610dfd578151838111610dd15780610a61600854611089565b93601f94858111610d65575b50602090858311600114610ca8578892610c9d575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c1916176008555b8551928311610c715750610aca600954611089565b818111610c11575b506020908211600114610b5457839482939492610b49575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c1916176009555b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00600a541617600a5580f35b015190508480610aea565b600984527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08316855b818110610bf957509583600195969710610bc2575b505050811b01600955610b1d565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c19169055848080610bb4565b9192602060018192868b015181550194019201610b9f565b600985527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af8280850160051c82019260208610610c68575b0160051c01905b818110610c5d5750610ad2565b858155600101610c50565b92508192610c49565b8460416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b015190508880610a82565b600889527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016895b818110610d4d5750908460019594939210610d16575b505050811b01600855610ab5565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c19169055888080610d08565b92936020600181928786015181550195019301610cf2565b909150600888527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee38580850160051c82019260208610610dc8575b9085949392910160051c01905b818110610dba5750610a6d565b898155849350600101610dad565b92508192610da0565b6024866041847f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8480fd5b8380fd5b505034610129578060031936011261012957602090610332610e25610f3d565b6024359033611355565b8484346101295781600319360112610129578282600854610e4f81611089565b908184526020956001918760018216918260001461051c575050600114610e83575050506104bc92916104ad910385610fd3565b9190869350600883527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee35b828410610ec757505050820101816104ad6104bc61049a565b8054848a018601528895508794909301928101610eae565b919082519283825260005b848110610f295750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b602081830181015184830182015201610eea565b6004359073ffffffffffffffffffffffffffffffffffffffff82168203610f6057565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff82168203610f6057565b6040810190811067ffffffffffffffff821117610fa457604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610fa457604052565b81601f82011215610f605780359067ffffffffffffffff8211610fa4576040519261106760207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601160185610fd3565b82845260208383010111610f6057816000926020809301838601378301015290565b90600182811c921680156110d2575b60208310146110a357565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691611098565b9173ffffffffffffffffffffffffffffffffffffffff8084169283156111ec57169283156111bb5760009083825281602052604082205490838210611163575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b6040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff919091166004820152602481019190915260448101839052606490fd5b60246040517fec442f0500000000000000000000000000000000000000000000000000000000815260006004820152fd5b60246040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260006004820152fd5b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001630148061132c575b15611285577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff821117610fa45760405251902090565b507f0000000000000000000000000000000000000000000000000000000000000000461461125c565b73ffffffffffffffffffffffffffffffffffffffff8091169182156113f457169182156113c35760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60246040517f94280d6200000000000000000000000000000000000000000000000000000000815260006004820152fd5b60246040517fe602df0500000000000000000000000000000000000000000000000000000000815260006004820152fd5b60ff811461147b5760ff811690601f8211611451576040519161144783610f88565b8252602082015290565b60046040517fb3512b0c000000000000000000000000000000000000000000000000000000008152fd5b5060405160055481600061148e83611089565b8083529260209060019081811690811561151d57506001146114bc575b50506114b992500382610fd3565b90565b91509260056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0936000925b82841061150557506114b994505050810160200138806114ab565b855487850183015294850194869450928101926114ea565b9050602093506114b99592507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b82010138806114ab565b60ff81146115825760ff811690601f8211611451576040519161144783610f88565b5060405160065481600061159583611089565b8083529260209060019081811690811561151d57506001146115bf5750506114b992500382610fd3565b91509260066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f936000925b82841061160857506114b994505050810160200138806114ab565b855487850183015294850194869450928101926115ed565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084116116b157926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa156116a557805173ffffffffffffffffffffffffffffffffffffffff81161561169c57918190565b50809160019190565b604051903d90823e3d90fd5b50505060009160039190565b600481101561177557806116cf575050565b600181036117015760046040517ff645eedf000000000000000000000000000000000000000000000000000000008152fd5b6002810361173a57602482604051907ffce698f70000000000000000000000000000000000000000000000000000000082526004820152fd5b6003146117445750565b602490604051907fd78bce0c0000000000000000000000000000000000000000000000000000000082526004820152fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea26469706673582212204c2512e12eab2c50b0cd8346f005b82d682f1ae657b0bf506306c0bd7c578e1a64736f6c63430008190033",
    "sourceMap": "151:1148:105:-:0;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;151:1148:105;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;151:1148:105;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;151:1148:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;;;;;;;;;-1:-1:-1;151:1148:105;;;;-1:-1:-1;;;;151:1148:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;;;;;;;;;;;;;;;;;;3401:45:62;;;:::i;:::-;3393:53;;;;;3467:51;;;:::i;:::-;3456:62;;;;;151:1148:105;3542:22:62;;3528:36;;;;151:1148:105;3591:25:62;;3574:42;;;;;;3644:13;3627:30;;151:1148:105;;4204:80:62;;;2079:95;;;;;;;;;;;;3644:13;2079:95;;;;4278:4;3627:30;2079:95;;;3627:30;4204:80;;2079:95;151:1148:105;;;;;;;;;;;;;;;;;4194:91:62;;2079:95;3667:48;4278:4;2079:95;3725:27;151:1148:105;;;;;;2079:95:62;151:1148:105;;;;;3627:30:62;151:1148:105;;;;;2079:95:62;151:1148:105;;;;;3528:36:62;151:1148:105;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;;-1:-1:-1;151:1148:105;;;;;-1:-1:-1;151:1148:105;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;;-1:-1:-1;151:1148:105;;-1:-1:-1;151:1148:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;;;;-1:-1:-1;151:1148:105;;-1:-1:-1;151:1148:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;;-1:-1:-1;151:1148:105;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;;-1:-1:-1;151:1148:105;;;;;-1:-1:-1;151:1148:105;;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;-1:-1:-1;151:1148:105;;-1:-1:-1;151:1148:105;;;;;;;;;;-1:-1:-1;151:1148:105;;;;;;;;;;;;;;;;-1:-1:-1;;151:1148:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;-1:-1:-1;151:1148:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;;;-1:-1:-1;151:1148:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;151:1148:105;;;;;;;:::o;:::-;;;;;;;;;;;;2914:340:58;151:1148:105;;3059:2:58;;151:1148:105;3037:24:58;;;3059:2;;;151:1148:105;;1854:2:58;151:1148:105;;1840:16:58;1836:72;;151:1148:105;;;;;2079:95:62;151:1148:105;;;;;;1949:36:58;;3077:27;:::o;151:1148:105:-;;;;;;;;;;1949:36:58;3077:27;:::o;1836:72::-;151:1148:105;;;1879:18:58;;;;;;;;;;;151:1148:105;;;;;;;;;-1:-1:-1;151:1148:105;;;;;;;;;;;;-1:-1:-1;151:1148:105;;;;;;1854:2:58;151:1148:105;;;;;;;1879:18:58;;;;151:1148:105;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;3033:215:58;-1:-1:-1;;;;;151:1148:105;;;;3432:13:62;151:1148:105;;;;;;;;;;;;;;;;3033:215:58;151:1148:105;;;;;;;;;;;3033:215:58;151:1148:105;;;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;;;;;;;;;;;;;;;;;;1390:66:58;3195:42;:::o;151:1148:105:-;;;;-1:-1:-1;151:1148:105;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;-1:-1:-1;151:1148:105;;-1:-1:-1;151:1148:105;;;;;;;;;;;;;;;;;;;;;;;1390:66:58;3195:42;:::o;151:1148:105:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;;;;;;;-1:-1:-1;151:1148:105;;;;-1:-1:-1;151:1148:105;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;;;;;;;;;;-1:-1:-1;151:1148:105;;;;;-1:-1:-1;151:1148:105;;;;;;;;2914:340:58;151:1148:105;;3059:2:58;;3037:24;;;3059:2;;;151:1148:105;1854:2:58;151:1148:105;;1840:16:58;1836:72;;151:1148:105;;;;;2079:95:62;151:1148:105;;;;;;1949:36:58;;3077:27;:::o;1836:72::-;151:1148:105;;;1879:18:58;;;;;;;;;;;151:1148:105;;;;;;;;;-1:-1:-1;151:1148:105;;;;;;;;;;;;-1:-1:-1;151:1148:105;;;;;;1854:2:58;151:1148:105;;;;;;;1879:18:58;;;;151:1148:105;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;3033:215:58;151:1148:105;-1:-1:-1;;;;;151:1148:105;;;;3501:16:62;151:1148:105;;;;;;;;;;;;;;3033:215:58;151:1148:105;;;;;;;;;;;3033:215:58;151:1148:105;;;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;;;;;;;;;;;;;;;;3501:16:62;151:1148:105;1390:66:58;3195:42;:::o;151:1148:105:-;;;;-1:-1:-1;151:1148:105;;;;;;;;;;;;3501:16:62;-1:-1:-1;151:1148:105;;-1:-1:-1;151:1148:105;;-1:-1:-1;151:1148:105;;;;;;;;;;;;;;;;;;;;;3501:16:62;151:1148:105;1390:66:58;3195:42;:::o;151:1148:105:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;;;;;;3501:16:62;-1:-1:-1;151:1148:105;;;;-1:-1:-1;151:1148:105;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde0314610e2f57508163095ea7b314610e055781631624f6c6146109f257816318160ddd146109d357816323b872dd1461086a578163313ce567146108485781633644e5151461082457816340c10f191461074457816370a08231146107015781637ecebe00146106bd57816384b0196e1461056457816395d89b41146104555781639dc29fac14610339578163a9059cbb14610308578163d505accf1461012d575063dd62ed3e146100d557600080fd5b34610129578060031936011261012957806020926100f1610f3d565b6100f9610f65565b73ffffffffffffffffffffffffffffffffffffffff91821683526001865283832091168252845220549051908152f35b5080fd5b839150346101295760e060031936011261012957610149610f3d565b610151610f65565b906044359260643560843560ff81168103610304578142116102d55773ffffffffffffffffffffffffffffffffffffffff90818516928389526007602052898920908154916001830190558a519060208201927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98452868d840152858a1660608401528a608084015260a083015260c082015260c0815260e0810181811067ffffffffffffffff8211176102a9578b5251902061025e916102559161021461121d565b908c51917f190100000000000000000000000000000000000000000000000000000000000083526002830152602282015260c43591604260a4359220611620565b909291926116bd565b168181036102755786610272878787611355565b80f35b604493508751927f4b800e460000000000000000000000000000000000000000000000000000000084528301526024820152fd5b60248b6041897f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b602483838a51917f62791302000000000000000000000000000000000000000000000000000000008352820152fd5b8680fd5b505034610129578060031936011261012957602090610332610328610f3d565b60243590336110dc565b5160018152f35b83915034610129578260031936011261012957610354610f3d565b73ffffffffffffffffffffffffffffffffffffffff81169160243591831561042d578385528460205285852054918383106103ce5750508184957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef936020938688528785520381872055816002540360025551908152a380f35b610429848489519485947fe450d38c000000000000000000000000000000000000000000000000000000008652850160409194939273ffffffffffffffffffffffffffffffffffffffff606083019616825260208201520152565b0390fd5b5084517f9fabe1c1000000000000000000000000000000000000000000000000000000008152fd5b828434610561578060031936011261056157815191828260095461047881611089565b908184526020956001918760018216918260001461051c5750506001146104c0575b5050506104bc92916104ad910385610fd3565b51928284938452830190610edf565b0390f35b9190869350600983527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af5b82841061050457505050820101816104ad6104bc61049a565b8054848a0186015288955087949093019281016104eb565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168782015293151560051b860190930193508492506104ad91506104bc905061049a565b80fd5b919050346106b957826003193601126106b9576105a07f0000000000000000000000000000000000000000000000000000000000000000611425565b926105ca7f0000000000000000000000000000000000000000000000000000000000000000611560565b90825192602092602085019585871067ffffffffffffffff88111761068d5750926020610643838896610636998b9996528686528151998a997f0f000000000000000000000000000000000000000000000000000000000000008b5260e0868c015260e08b0190610edf565b91898303908a0152610edf565b924660608801523060808801528460a088015286840360c088015251928381520193925b82811061067657505050500390f35b835185528695509381019392810192600101610667565b8360416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8280fd5b505034610129576020600319360112610129578060209273ffffffffffffffffffffffffffffffffffffffff6106f1610f3d565b1681526007845220549051908152f35b505034610129576020600319360112610129578060209273ffffffffffffffffffffffffffffffffffffffff610735610f3d565b16815280845220549051908152f35b919050346106b957806003193601126106b95761075f610f3d565b9073ffffffffffffffffffffffffffffffffffffffff60243592169283156107fd57600254908382018092116107d1575084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260209260025585855284835280852082815401905551908152a380f35b8560116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b90517f9fabe1c1000000000000000000000000000000000000000000000000000000008152fd5b50503461012957816003193601126101295760209061084161121d565b9051908152f35b50503461012957816003193601126101295760209060ff600a54169051908152f35b9050823461056157606060031936011261056157610886610f3d565b61088e610f65565b916044359373ffffffffffffffffffffffffffffffffffffffff8316808352600160205286832033845260205286832054917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83036108f6575b6020886103328989896110dc565b86831061098e57811561095f57331561093057508252600160209081528683203384528152918690209085900390558290610332876108e8565b602490848951917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b602490848951917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b87517ffb8f41b2000000000000000000000000000000000000000000000000000000008152339181019182526020820193909352604081018790528291506060010390fd5b5050346101295781600319360112610129576020906002549051908152f35b83346105615760606003193601126105615767ffffffffffffffff9180358381116106b957610a249036908301611014565b92602435818111610e0157610a3c9036908401611014565b936044359260ff8416809403610dfd578151838111610dd15780610a61600854611089565b93601f94858111610d65575b50602090858311600114610ca8578892610c9d575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c1916176008555b8551928311610c715750610aca600954611089565b818111610c11575b506020908211600114610b5457839482939492610b49575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c1916176009555b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00600a541617600a5580f35b015190508480610aea565b600984527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08316855b818110610bf957509583600195969710610bc2575b505050811b01600955610b1d565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c19169055848080610bb4565b9192602060018192868b015181550194019201610b9f565b600985527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af8280850160051c82019260208610610c68575b0160051c01905b818110610c5d5750610ad2565b858155600101610c50565b92508192610c49565b8460416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b015190508880610a82565b600889527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016895b818110610d4d5750908460019594939210610d16575b505050811b01600855610ab5565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c19169055888080610d08565b92936020600181928786015181550195019301610cf2565b909150600888527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee38580850160051c82019260208610610dc8575b9085949392910160051c01905b818110610dba5750610a6d565b898155849350600101610dad565b92508192610da0565b6024866041847f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8480fd5b8380fd5b505034610129578060031936011261012957602090610332610e25610f3d565b6024359033611355565b8484346101295781600319360112610129578282600854610e4f81611089565b908184526020956001918760018216918260001461051c575050600114610e83575050506104bc92916104ad910385610fd3565b9190869350600883527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee35b828410610ec757505050820101816104ad6104bc61049a565b8054848a018601528895508794909301928101610eae565b919082519283825260005b848110610f295750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b602081830181015184830182015201610eea565b6004359073ffffffffffffffffffffffffffffffffffffffff82168203610f6057565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff82168203610f6057565b6040810190811067ffffffffffffffff821117610fa457604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610fa457604052565b81601f82011215610f605780359067ffffffffffffffff8211610fa4576040519261106760207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601160185610fd3565b82845260208383010111610f6057816000926020809301838601378301015290565b90600182811c921680156110d2575b60208310146110a357565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691611098565b9173ffffffffffffffffffffffffffffffffffffffff8084169283156111ec57169283156111bb5760009083825281602052604082205490838210611163575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b6040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff919091166004820152602481019190915260448101839052606490fd5b60246040517fec442f0500000000000000000000000000000000000000000000000000000000815260006004820152fd5b60246040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260006004820152fd5b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001630148061132c575b15611285577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff821117610fa45760405251902090565b507f0000000000000000000000000000000000000000000000000000000000000000461461125c565b73ffffffffffffffffffffffffffffffffffffffff8091169182156113f457169182156113c35760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60246040517f94280d6200000000000000000000000000000000000000000000000000000000815260006004820152fd5b60246040517fe602df0500000000000000000000000000000000000000000000000000000000815260006004820152fd5b60ff811461147b5760ff811690601f8211611451576040519161144783610f88565b8252602082015290565b60046040517fb3512b0c000000000000000000000000000000000000000000000000000000008152fd5b5060405160055481600061148e83611089565b8083529260209060019081811690811561151d57506001146114bc575b50506114b992500382610fd3565b90565b91509260056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0936000925b82841061150557506114b994505050810160200138806114ab565b855487850183015294850194869450928101926114ea565b9050602093506114b99592507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b82010138806114ab565b60ff81146115825760ff811690601f8211611451576040519161144783610f88565b5060405160065481600061159583611089565b8083529260209060019081811690811561151d57506001146115bf5750506114b992500382610fd3565b91509260066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f936000925b82841061160857506114b994505050810160200138806114ab565b855487850183015294850194869450928101926115ed565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084116116b157926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa156116a557805173ffffffffffffffffffffffffffffffffffffffff81161561169c57918190565b50809160019190565b604051903d90823e3d90fd5b50505060009160039190565b600481101561177557806116cf575050565b600181036117015760046040517ff645eedf000000000000000000000000000000000000000000000000000000008152fd5b6002810361173a57602482604051907ffce698f70000000000000000000000000000000000000000000000000000000082526004820152fd5b6003146117445750565b602490604051907fd78bce0c0000000000000000000000000000000000000000000000000000000082526004820152fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea26469706673582212204c2512e12eab2c50b0cd8346f005b82d682f1ae657b0bf506306c0bd7c578e1a64736f6c63430008190033",
    "sourceMap": "151:1148:105:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;151:1148:105;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;3952:11:48;151:1148:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;151:1148:105;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;1883:15:50;;:26;1879:97;;151:1148:105;;;;;;;;;1121:7:57;151:1148:105;;;;;;;;;;;;;;;;2017:78:50;151:1148:105;2017:78:50;;151:1148:105;1022:95:50;151:1148:105;;1022:95:50;;;;151:1148:105;;;;;1022:95:50;;151:1148:105;1022:95:50;151:1148:105;1022:95:50;;151:1148:105;;1022:95:50;;151:1148:105;;1022:95:50;;151:1148:105;;2017:78:50;;151:1148:105;;;;;;;;;;;;;;;2007:89:50;;7021:8:61;;6967:25;;5053:20:62;;:::i;:::-;3515:233:63;;;;;;;;;;;;;;;151:1148:105;;;3515:233:63;151:1148:105;;3515:233:63;;6967:25:61;:::i;:::-;7021:8;;;;;:::i;:::-;151:1148:105;2220:15:50;;;2216:88;;9105:4:48;;;;;;:::i;:::-;151:1148:105;;2216:88:50;151:1148:105;;;;;2258:35:50;;;;;;151:1148:105;;1022:95:50;;151:1148:105;2258:35:50;151:1148:105;;;;;;;;;;1879:97:50;151:1148:105;;;;;1932:33:50;;;;;;151:1148:105;1932:33:50;151:1148:105;;;;;;;;;;;-1:-1:-1;;151:1148:105;;;;;;;3754:5:48;151:1148:105;;:::i;:::-;;;735:10:56;;3754:5:48;:::i;:::-;151:1148:105;;;;;;;;;;;;;-1:-1:-1;;151:1148:105;;;;;;;:::i;:::-;;;;;;;;758:18;;754:44;;151:1148;;;;;;;;;;6603:19:48;;;;6599:115;;151:1148:105;;;;;7346:25:48;151:1148:105;;;;;;;;;;;;;;;7073:21:48;151:1148:105;;7073:21:48;151:1148:105;;;;;7346:25:48;151:1148:105;;6599:115:48;6649:50;151:1148:105;;;;6649:50:48;;;;;;;;151:1148:105;;;;;;;;;;;;;;;;;;;;6649:50:48;;;;754:44:105;151:1148;;;785:13;;;;151:1148;;;;;;;-1:-1:-1;;151:1148:105;;;;;;;;;;1106:7;151:1148;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1106:7;151:1148;;;;;;;;;-1:-1:-1;;;151:1148:105;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;-1:-1:-1;151:1148:105;;-1:-1:-1;151:1148:105;;-1:-1:-1;151:1148:105;;;;;;;;;;;;;-1:-1:-1;;151:1148:105;;;;;6099:41:62;:5;:41;:::i;:::-;6554:8;:47;:8;:47;:::i;:::-;151:1148:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;5590:13:62;;151:1148:105;;;;5625:4:62;151:1148:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;151:1148:105;;;;;;;;;;;:::i;:::-;;;;624:7:57;151:1148:105;;;;;;;;;;;;;;;;;-1:-1:-1;;151:1148:105;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;151:1148:105;;;;;;;:::i;:::-;;;;;;;605:16;;;601:42;;6496:21:48;151:1148:105;;;;;;;;;;;;;7346:25:48;151:1148:105;;;6496:21:48;151:1148:105;;;;;;;;;;;;;;;;;;;;7346:25:48;151:1148:105;;;;;;;;;;;;601:42;151:1148;;630:13;;;;151:1148;;;;;;;-1:-1:-1;;151:1148:105;;;;;;2741:20:50;;;:::i;:::-;151:1148:105;;;;;;;;;;;;;-1:-1:-1;;151:1148:105;;;;;;;;1255:9;151:1148;;;;;;;;;;;;;;;;-1:-1:-1;;151:1148:105;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;735:10:56;151:1148:105;;;;;;;;10828:37:48;10848:17;10828:37;;10824:310;;151:1148:105;;5249:5:48;;;;;;:::i;10824:310::-;10885:24;;;10881:130;;10061:19;;10057:89;;735:10:56;10159:21:48;10155:90;;-1:-1:-1;151:1148:105;;;;;;;;;;735:10:56;151:1148:105;;;;;;;;;;;;;;;;5249:5:48;10824:310;;;10155:90;151:1148:105;;;;;10203:31:48;;;;;;151:1148:105;10203:31:48;10057:89;151:1148:105;;;;;10103:32:48;;;;;;151:1148:105;10103:32:48;10881:130;151:1148:105;;10936:60:48;;;735:10:56;10936:60:48;;;151:1148:105;;;;;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;6649:50:48;;;151:1148:105;;;;;;;-1:-1:-1;;151:1148:105;;;;;;;3222:12:48;151:1148:105;;;;;;;;;;;;;-1:-1:-1;;151:1148:105;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;448:13;151:1148;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;448:13;151:1148;;;;;;;;;;;471:17;151:1148;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;471:17;151:1148;;;498:21;151:1148;;;498:21;151:1148;;;;;;;-1:-1:-1;151:1148:105;;;;;471:17;151:1148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;471:17;151:1148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;471:17;151:1148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;;;;448:13;151:1148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;448:13;151:1148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;448:13;151:1148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;151:1148:105;;;;;;;9105:4:48;151:1148:105;;:::i;:::-;;;735:10:56;;9105:4:48;:::i;151:1148:105:-;;;;;;;-1:-1:-1;;151:1148:105;;;;;;;962:5;151:1148;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;962:5;151:1148;;;;;;;;;-1:-1:-1;;;151:1148:105;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;;;;;;;;;;-1:-1:-1;151:1148:105;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;5656:300:48;;151:1148:105;;;;5739:18:48;;;5735:86;;151:1148:105;5834:16:48;;;5830:86;;6356:540;151:1148:105;;;;;;;;;;;6603:19:48;;;;6599:115;;151:1148:105;;;;;7346:25:48;151:1148:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;7346:25:48;5656:300::o;6599:115::-;151:1148:105;;6649:50:48;;;151:1148:105;;;;;6649:50:48;;;151:1148:105;;;;;;;;;;;;;;;;6649:50:48;5830:86;151:1148:105;;;5873:32:48;;;5755:1;5873:32;;;151:1148:105;5873:32:48;5735:86;151:1148:105;;;5780:30:48;;;5755:1;5780:30;;;151:1148:105;5780:30:48;3845:262:62;151:1148:105;3938:11:62;151:1148:105;3929:4:62;3921:28;:63;;;3845:262;3917:184;;;4007:22;4000:29;:::o;3917:184::-;151:1148:105;;4204:80:62;;;151:1148:105;2079:95:62;151:1148:105;;4226:11:62;151:1148:105;2079:95:62;;151:1148:105;4239:14:62;2079:95;;;151:1148:105;4255:13:62;2079:95;;;151:1148:105;3929:4:62;2079:95;;;151:1148:105;2079:95:62;4204:80;;2079:95;151:1148:105;;;;;;;;;;;;;;4194:91:62;;4060:30;:::o;3921:63::-;3970:14;;3953:13;:31;3921:63;;9949:432:48;151:1148:105;;;;10061:19:48;;;10057:89;;151:1148:105;10159:21:48;;;10155:90;;151:1148:105;10333:31:48;151:1148:105;;10078:1:48;151:1148:105;9105:4:48;151:1148:105;;;10078:1:48;151:1148:105;;10078:1:48;151:1148:105;;;;;10078:1:48;151:1148:105;;;;;;;10333:31:48;9949:432::o;10155:90::-;151:1148:105;;;10203:31:48;;;10078:1;10203:31;;;151:1148:105;10203:31:48;10057:89;151:1148:105;;;10103:32:48;;;10078:1;10103:32;;;151:1148:105;10103:32:48;3385:267:58;1390:66;3508:46;;1390:66;;;2652:40;;2706:11;2715:2;2706:11;;2702:69;;151:1148:105;;;;;;:::i;:::-;2367:90:58;;2311:2;151:1148:105;;2367:90:58;3570:22;:::o;2702:69::-;2740:20;151:1148:105;;2740:20:58;;;;3504:142;-1:-1:-1;151:1148:105;;6126:13:62;151:1148:105;;-1:-1:-1;151:1148:105;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1390:66:58;;;;;;;;:::i;:::-;3623:12;:::o;151:1148:105:-;;;;6126:13:62;-1:-1:-1;151:1148:105;;;-1:-1:-1;151:1148:105;;;;;;;-1:-1:-1;1390:66:58;;-1:-1:-1;;;151:1148:105;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;;;;;;;;;;;1390:66:58;151:1148:105;;;;;;;;;;;;;6126:13:62;151:1148:105;;;;;;;;3385:267:58;1390:66;3508:46;;1390:66;;;2652:40;;2706:11;2715:2;2706:11;;2702:69;;151:1148:105;;;;;;:::i;3504:142:58:-;-1:-1:-1;151:1148:105;;6584:16:62;151:1148:105;;-1:-1:-1;151:1148:105;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;1390:66:58;;;;;;;;:::i;151:1148:105:-;;;;6584:16:62;-1:-1:-1;151:1148:105;;;-1:-1:-1;151:1148:105;;;;;;;-1:-1:-1;1390:66:58;;-1:-1:-1;;;151:1148:105;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:1148:105;;;;;;5140:1530:61;;;6199:66;6186:79;;6182:164;;151:1148:105;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6457:24:61;;;;;;;;;;;;;;151:1148:105;;;6495:20:61;6491:113;;6614:49;;5140:1530;:::o;6491:113::-;6531:62;;;6457:24;6531:62;;:::o;6457:24::-;151:1148:105;;;;;;;;;;6182:164:61;6281:54;;;6297:1;6281:54;6301:30;6281:54;;:::o;7196:532::-;151:1148:105;;;;;;7282:29:61;;;7327:7;;:::o;7278:444::-;151:1148:105;7378:38:61;;151:1148:105;;;;;7439:23:61;;;;7374:348;7492:35;7483:44;;7492:35;;151:1148:105;;;;7550:46:61;;;;151:1148:105;7550:46:61;;151:1148:105;7550:46:61;7479:243;7626:30;7617:39;7613:109;;7479:243;7196:532::o;7613:109::-;151:1148:105;;;;7679:32:61;;;;151:1148:105;7679:32:61;;151:1148:105;7679:32:61;151:1148:105;;7291:20:61;151:1148:105;;;;;7291:20:61;151:1148:105",
    "linkReferences": {},
    "immutableReferences": {
      "52353": [
        {
          "start": 4707,
          "length": 32
        }
      ],
      "52355": [
        {
          "start": 4911,
          "length": 32
        }
      ],
      "52357": [
        {
          "start": 4660,
          "length": 32
        }
      ],
      "52359": [
        {
          "start": 4786,
          "length": 32
        }
      ],
      "52361": [
        {
          "start": 4824,
          "length": 32
        }
      ],
      "52364": [
        {
          "start": 1404,
          "length": 32
        }
      ],
      "52367": [
        {
          "start": 1446,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(address,uint256)": "9dc29fac",
    "decimals()": "313ce567",
    "eip712Domain()": "84b0196e",
    "initialize(string,string,uint8)": "1624f6c6",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/utils/ERC20PermitMintable.sol\":\"ERC20PermitMintable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\",\":solady/=node_modules/solady/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"node_modules/@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"node_modules/@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"test/utils/ERC20PermitMintable.sol\":{\"keccak256\":\"0xb543fb9f4b90825d82af912abbbc96b3cd446d9d813a0d0e0147225b012bd06f\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://61ac2601414a0bba8d5e31ff482c4c35c56ba0e987f583ff778901b9b8ff923f\",\"dweb:/ipfs/Qmbh1UanYbfPrtSFXMbjQGzZAYeUvYeQPL7QeQKoujKhtm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.25+commit.b61c2a91"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSAInvalidSignature"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ECDSAInvalidSignatureLength"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "ECDSAInvalidSignatureS"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidApprover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSpender"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC2612ExpiredSignature"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC2612InvalidSigner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "currentNonce",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidAccountNonce"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidShortString"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "EIP712DomainChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eip712Domain",
          "outputs": [
            {
              "internalType": "bytes1",
              "name": "fields",
              "type": "bytes1"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "version",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "verifyingContract",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "extensions",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name_",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol_",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "decimals_",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the decimals places of the token."
          },
          "eip712Domain()": {
            "details": "See {IERC-5267}."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "nonces(address)": {
            "details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
          },
          "symbol()": {
            "details": "Returns the symbol of the token."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "forge-std/=lib/forge-std/src/",
        "solady/=node_modules/solady/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/utils/ERC20PermitMintable.sol": "ERC20PermitMintable"
      },
      "evmVersion": "paris",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/interfaces/IERC5267.sol": {
        "keccak256": "0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92",
        "urls": [
          "bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a",
          "dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
        "urls": [
          "bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
          "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol": {
        "keccak256": "0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee",
        "urls": [
          "bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2",
          "dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
        "urls": [
          "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
          "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
        "urls": [
          "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
          "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Nonces.sol": {
        "keccak256": "0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f",
        "urls": [
          "bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e",
          "dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol": {
        "keccak256": "0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6",
        "urls": [
          "bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c",
          "dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418",
        "urls": [
          "bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c",
          "dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
        "urls": [
          "bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
          "dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf",
        "urls": [
          "bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c",
          "dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0",
        "urls": [
          "bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21",
          "dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
        "keccak256": "0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435",
        "urls": [
          "bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c",
          "dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
        "urls": [
          "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
          "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
        "urls": [
          "bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
          "dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"
        ],
        "license": "MIT"
      },
      "test/utils/ERC20PermitMintable.sol": {
        "keccak256": "0xb543fb9f4b90825d82af912abbbc96b3cd446d9d813a0d0e0147225b012bd06f",
        "urls": [
          "bzz-raw://61ac2601414a0bba8d5e31ff482c4c35c56ba0e987f583ff778901b9b8ff923f",
          "dweb:/ipfs/Qmbh1UanYbfPrtSFXMbjQGzZAYeUvYeQPL7QeQKoujKhtm"
        ],
        "license": "SEE LICENSE IN LICENSE"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/utils/ERC20PermitMintable.sol",
    "id": 71393,
    "exportedSymbols": {
      "ECDSA": [
        52332
      ],
      "EIP712": [
        52559
      ],
      "ERC20": [
        50712
      ],
      "ERC20Permit": [
        50944
      ],
      "ERC20PermitMintable": [
        71392
      ],
      "IERC20Permit": [
        51006
      ],
      "Nonces": [
        51402
      ]
    },
    "nodeType": "SourceUnit",
    "src": "51:1249:105",
    "nodes": [
      {
        "id": 71271,
        "nodeType": "PragmaDirective",
        "src": "51:24:105",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 71272,
        "nodeType": "ImportDirective",
        "src": "77:72:105",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 71393,
        "sourceUnit": 50945,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 71392,
        "nodeType": "ContractDefinition",
        "src": "151:1148:105",
        "nodes": [
          {
            "id": 71285,
            "nodeType": "FunctionDefinition",
            "src": "201:57:105",
            "nodes": [],
            "body": {
              "id": 71284,
              "nodeType": "Block",
              "src": "256:2:105",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "74657374",
                    "id": 71277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "227:6:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                      "typeString": "literal_string \"test\""
                    },
                    "value": "test"
                  }
                ],
                "id": 71278,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 71276,
                  "name": "ERC20Permit",
                  "nameLocations": [
                    "215:11:105"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50944,
                  "src": "215:11:105"
                },
                "nodeType": "ModifierInvocation",
                "src": "215:19:105"
              },
              {
                "arguments": [
                  {
                    "hexValue": "74657374",
                    "id": 71280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "241:6:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                      "typeString": "literal_string \"test\""
                    },
                    "value": "test"
                  },
                  {
                    "hexValue": "747374",
                    "id": 71281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "249:5:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8486bd01d0192a29421fde92e65e1694b267f0aae643c147b1680e59bbfd6d8a",
                      "typeString": "literal_string \"tst\""
                    },
                    "value": "tst"
                  }
                ],
                "id": 71282,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 71279,
                  "name": "ERC20",
                  "nameLocations": [
                    "235:5:105"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50712,
                  "src": "235:5:105"
                },
                "nodeType": "ModifierInvocation",
                "src": "235:20:105"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 71275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "212:2:105"
            },
            "returnParameters": {
              "id": 71283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "256:0:105"
            },
            "scope": 71392,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 71287,
            "nodeType": "VariableDeclaration",
            "src": "264:20:105",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "279:5:105",
            "scope": 71392,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 71286,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "264:6:105",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "id": 71289,
            "nodeType": "VariableDeclaration",
            "src": "290:22:105",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "305:7:105",
            "scope": 71392,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 71288,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "290:6:105",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "id": 71291,
            "nodeType": "VariableDeclaration",
            "src": "318:23:105",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_decimals",
            "nameLocation": "332:9:105",
            "scope": 71392,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 71290,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "318:5:105",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "private"
          },
          {
            "id": 71313,
            "nodeType": "FunctionDefinition",
            "src": "348:178:105",
            "nodes": [],
            "body": {
              "id": 71312,
              "nodeType": "Block",
              "src": "438:88:105",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 71302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 71300,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71287,
                      "src": "448:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 71301,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71293,
                      "src": "456:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "448:13:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 71303,
                  "nodeType": "ExpressionStatement",
                  "src": "448:13:105"
                },
                {
                  "expression": {
                    "id": 71306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 71304,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71289,
                      "src": "471:7:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 71305,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71295,
                      "src": "481:7:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "471:17:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 71307,
                  "nodeType": "ExpressionStatement",
                  "src": "471:17:105"
                },
                {
                  "expression": {
                    "id": 71310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 71308,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71291,
                      "src": "498:9:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 71309,
                      "name": "decimals_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71297,
                      "src": "510:9:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "498:21:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 71311,
                  "nodeType": "ExpressionStatement",
                  "src": "498:21:105"
                }
              ]
            },
            "functionSelector": "1624f6c6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "357:10:105",
            "parameters": {
              "id": 71298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71293,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "382:5:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 71313,
                  "src": "368:19:105",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 71292,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "368:6:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71295,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "403:7:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 71313,
                  "src": "389:21:105",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 71294,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "389:6:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71297,
                  "mutability": "mutable",
                  "name": "decimals_",
                  "nameLocation": "418:9:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 71313,
                  "src": "412:15:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 71296,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:5:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "367:61:105"
            },
            "returnParameters": {
              "id": 71299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "438:0:105"
            },
            "scope": 71392,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 71336,
            "nodeType": "FunctionDefinition",
            "src": "532:145:105",
            "nodes": [],
            "body": {
              "id": 71335,
              "nodeType": "Block",
              "src": "591:86:105",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 71325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 71320,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71315,
                      "src": "605:2:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 71323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "619:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 71322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "611:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 71321,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "611:7:105",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 71324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "611:10:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "605:16:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 71329,
                  "nodeType": "IfStatement",
                  "src": "601:42:105",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 71326,
                        "name": "AddressZero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71391,
                        "src": "630:11:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 71327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "630:13:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 71328,
                    "nodeType": "RevertStatement",
                    "src": "623:20:105"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 71331,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71315,
                        "src": "659:2:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 71332,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71317,
                        "src": "663:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 71330,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50552,
                      "src": "653:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 71333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "653:17:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71334,
                  "nodeType": "ExpressionStatement",
                  "src": "653:17:105"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "541:4:105",
            "parameters": {
              "id": 71318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71315,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "554:2:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 71336,
                  "src": "546:10:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71314,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "546:7:105",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71317,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "566:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 71336,
                  "src": "558:14:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71316,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "558:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "545:28:105"
            },
            "returnParameters": {
              "id": 71319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "591:0:105"
            },
            "scope": 71392,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 71359,
            "nodeType": "FunctionDefinition",
            "src": "683:151:105",
            "nodes": [],
            "body": {
              "id": 71358,
              "nodeType": "Block",
              "src": "744:90:105",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 71348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 71343,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71338,
                      "src": "758:4:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 71346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "774:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 71345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "766:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 71344,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "766:7:105",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 71347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "766:10:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "758:18:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 71352,
                  "nodeType": "IfStatement",
                  "src": "754:44:105",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 71349,
                        "name": "AddressZero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71391,
                        "src": "785:11:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 71350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "785:13:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 71351,
                    "nodeType": "RevertStatement",
                    "src": "778:20:105"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 71354,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71338,
                        "src": "814:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 71355,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71340,
                        "src": "820:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 71353,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50585,
                      "src": "808:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 71356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "808:19:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71357,
                  "nodeType": "ExpressionStatement",
                  "src": "808:19:105"
                }
              ]
            },
            "functionSelector": "9dc29fac",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "692:4:105",
            "parameters": {
              "id": 71341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71338,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "705:4:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 71359,
                  "src": "697:12:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "697:7:105",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71340,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "719:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 71359,
                  "src": "711:14:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71339,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "696:30:105"
            },
            "returnParameters": {
              "id": 71342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "744:0:105"
            },
            "scope": 71392,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 71369,
            "nodeType": "FunctionDefinition",
            "src": "884:90:105",
            "nodes": [],
            "body": {
              "id": 71368,
              "nodeType": "Block",
              "src": "945:29:105",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 71366,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 71287,
                    "src": "962:5:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 71365,
                  "id": 71367,
                  "nodeType": "Return",
                  "src": "955:12:105"
                }
              ]
            },
            "baseFunctions": [
              50258
            ],
            "documentation": {
              "id": 71360,
              "nodeType": "StructuredDocumentation",
              "src": "840:39:105",
              "text": "@dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "893:4:105",
            "overrides": {
              "id": 71362,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "912:8:105"
            },
            "parameters": {
              "id": 71361,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "897:2:105"
            },
            "returnParameters": {
              "id": 71365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71364,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71369,
                  "src": "930:13:105",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 71363,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "930:6:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "929:15:105"
            },
            "scope": 71392,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 71379,
            "nodeType": "FunctionDefinition",
            "src": "1026:94:105",
            "nodes": [],
            "body": {
              "id": 71378,
              "nodeType": "Block",
              "src": "1089:31:105",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 71376,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 71289,
                    "src": "1106:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 71375,
                  "id": 71377,
                  "nodeType": "Return",
                  "src": "1099:14:105"
                }
              ]
            },
            "baseFunctions": [
              50267
            ],
            "documentation": {
              "id": 71370,
              "nodeType": "StructuredDocumentation",
              "src": "980:41:105",
              "text": "@dev Returns the symbol of the token."
            },
            "functionSelector": "95d89b41",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "1035:6:105",
            "overrides": {
              "id": 71372,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1056:8:105"
            },
            "parameters": {
              "id": 71371,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1041:2:105"
            },
            "returnParameters": {
              "id": 71375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71374,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71379,
                  "src": "1074:13:105",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 71373,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1074:6:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1073:15:105"
            },
            "scope": 71392,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 71389,
            "nodeType": "FunctionDefinition",
            "src": "1181:90:105",
            "nodes": [],
            "body": {
              "id": 71388,
              "nodeType": "Block",
              "src": "1238:33:105",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 71386,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 71291,
                    "src": "1255:9:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 71385,
                  "id": 71387,
                  "nodeType": "Return",
                  "src": "1248:16:105"
                }
              ]
            },
            "baseFunctions": [
              50276
            ],
            "documentation": {
              "id": 71380,
              "nodeType": "StructuredDocumentation",
              "src": "1126:50:105",
              "text": "@dev Returns the decimals places of the token."
            },
            "functionSelector": "313ce567",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "1190:8:105",
            "overrides": {
              "id": 71382,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1213:8:105"
            },
            "parameters": {
              "id": 71381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1198:2:105"
            },
            "returnParameters": {
              "id": 71385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71384,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71389,
                  "src": "1231:5:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 71383,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1231:5:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1230:7:105"
            },
            "scope": 71392,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 71391,
            "nodeType": "ErrorDefinition",
            "src": "1277:20:105",
            "nodes": [],
            "errorSelector": "9fabe1c1",
            "name": "AddressZero",
            "nameLocation": "1283:11:105",
            "parameters": {
              "id": 71390,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1294:2:105"
            }
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 71273,
              "name": "ERC20Permit",
              "nameLocations": [
                "183:11:105"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 50944,
              "src": "183:11:105"
            },
            "id": 71274,
            "nodeType": "InheritanceSpecifier",
            "src": "183:11:105"
          }
        ],
        "canonicalName": "ERC20PermitMintable",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          71392,
          50944,
          51402,
          52559,
          49224,
          51006,
          50712,
          49266,
          50970,
          50790,
          51334
        ],
        "name": "ERC20PermitMintable",
        "nameLocation": "160:19:105",
        "scope": 71393,
        "usedErrors": [
          49236,
          49241,
          49246,
          49255,
          49260,
          49265,
          50821,
          50828,
          51344,
          51416,
          51418,
          51995,
          52000,
          52005,
          71391
        ],
        "usedEvents": [
          49204,
          50724,
          50733
        ]
      }
    ],
    "license": "SEE LICENSE IN LICENSE"
  },
  "id": 105
} as const;